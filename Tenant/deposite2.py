from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.common.by import By
from selenium.webdriver.common.keys import Keys
from src.testproject.classes import DriverStepSettings, StepSettings
from src.testproject.decorator import report_assertion_errors
from src.testproject.enums import SleepTimingType
from src.testproject.sdk.drivers import webdriver
import pytest


"""
This pytest test was automatically generated by TestProject
    Project: My first Project
    Package: TestProject.Generated.Tests.MyFirstProject
    Test: tenant withdraw
    Generated by: Muhammad Ibrahim (ibrahimrehman88@gmail.com)
    Generated on 07/04/2022, 09:32:12
"""


@pytest.fixture()
def driver():
    driver = webdriver.Chrome(token="f_1hwOkIkbvjwf4rvPdMFYhyyPVAHDHrICakI0LD98g",
                              project_name="My first Project",
                              job_name="tenant withdraw")
    step_settings = StepSettings(timeout=15000,
                                 sleep_time=500,
                                 sleep_timing_type=SleepTimingType.Before)
    with DriverStepSettings(driver, step_settings):
        yield driver
    driver.quit()


@report_assertion_errors
def test_main(driver):
    # Test Parameters
    # Auto generated application URL parameter
    ApplicationURL = "https://avaxdevtenants.akru.co"

    # 1. Navigate to '{ApplicationURL}'
    # Navigates the specified URL (Auto-generated)
    driver.get(f'{ApplicationURL}')

    # 2. Click 'Log in'
    log_in = driver.find_element(By.CSS_SELECTOR,
                                 "#navbar-header-sticky-login")
    log_in.click()

    # 3. Click 'Tenant portal'
    tenant_portal = driver.find_element(By.XPATH,
                                        "//button[. = 'Tenant portal']")
    tenant_portal.click()

    # 4. Click 'navbar-select-magic'
    navbar_select_magic = driver.find_element(By.CSS_SELECTOR,
                                              "#navbar-select-magic")
    navbar_select_magic.click()

    # 5. Click 'Allow selection'
    allow_selection = driver.find_element(By.XPATH,
                                          "//button[. = ' Allow selection ']")
    allow_selection.click()

    # 6. Click 'email'
    email = driver.find_element(By.CSS_SELECTOR,
                                "#navbar-magic-email")
    email.click()

    # 7. Type 'tenantav3@yopmail.com' in 'email'
    email = driver.find_element(By.CSS_SELECTOR,
                                "#navbar-magic-email")
    email.send_keys("tenantav3@yopmail.com")

    # 8. Click 'I'
    i = driver.find_element(By.XPATH,
                            "//button[1]/i")
    i.click()

    # 9. Is 'DIV2' visible?
    div2 = driver.find_element(By.XPATH,
                               "//body/div[1]/div/div[2]")
    assert div2.is_displayed()

    # 10. Click 'IMG'
    img = driver.find_element(By.XPATH,
                              "//body/div[1]/div/div[2]//img")
    img.click()

    # 11. Is 'IMG' visible?
    img = driver.find_element(By.XPATH,
                              "//body/div[1]/div/div[2]//img")
    assert img.is_displayed()

    # 12. Click 'DIV'
    # Step switches frame driver context.
    driver.switch_to.default_content()
    driver.switch_to.frame(
        driver.find_element(By.XPATH,
                            "/html/body/iframe[3]"))
    div = driver.find_element(By.XPATH,
                              "//div[3]/div/div/div[2]")
    div.click()

    # 13. Is 'DIV' visible?
    # Step switches frame driver context.
    driver.switch_to.default_content()
    driver.switch_to.frame(
        driver.find_element(By.XPATH,
                            "/html/body/iframe[3]"))
    div = driver.find_element(By.XPATH,
                              "//div[3]/div/div/div[2]")
    assert div.is_displayed()

    # 14. Switch to window '1'
    driver.switch_to.window(driver.window_handles[1])

    # 15. Navigate to 'https://yopmail.com/'
    driver.get("https://yopmail.com/")

    # 16. Click 'login'
    login = driver.find_element(By.CSS_SELECTOR,
                                "#login")
    login.click()

    # 17. Type 'tenantav3' in 'login'
    login = driver.find_element(By.CSS_SELECTOR,
                                "#login")
    login.send_keys("tenantav3")

    # 18. Send 'ENTER' key(s)
    ActionChains(driver).send_keys(Keys.ENTER).perform()

    # 19. Click ''
    _ = driver.find_element(By.CSS_SELECTOR,
                            "#refresh")
    _.click()

    # 20. Click 'Log in to Akru TestNet1'
    # Step switches frame driver context.
    driver.switch_to.default_content()
    driver.switch_to.frame(
        driver.find_element(By.XPATH,
                            "//*[@id = 'ifmail']|//*[@name = 'ifmail']|/html/body/div[1]/div/main/div[2]/div[3]/div/div[1]/iframe"))
    log_in_to_akru_testnet1 = driver.find_element(By.XPATH,
                                                  "//strong[. = 'Log in to Akru TestNet']")
    log_in_to_akru_testnet1.click()

    # 21. Switch to window '2'
    driver.switch_to.window(driver.window_handles[2])

    # 22. Switch to window '0'
    driver.switch_to.window(driver.window_handles[0])

    # 23. Close window with index '2'
    driver.close()

    # 24. Close window with index '1'
    driver.close()

    # 25. Scroll window by ('0','115')
    driver.execute_script("window.scrollBy(0,115)")

    # 26. Scroll window by ('0','76')
    driver.execute_script("window.scrollBy(0,76)")

    # 27. Click 'Withdraw'
    withdraw = driver.find_element(By.XPATH,
                                   "//a[. = 'Withdraw']")
    withdraw.click()

    # 28. Scroll window by ('0','72')
    driver.execute_script("window.scrollBy(0,72)")

    # 29. Click 'Continue Payment'
    continue_payment = driver.find_element(By.CSS_SELECTOR,
                                           "#toBankAccount")
    continue_payment.click()

    # 30. Click 'amount'
    amount = driver.find_element(By.CSS_SELECTOR,
                                 "#outlined-error-helper-text")
    amount.click()

    # 31. Type '100' in 'amount'
    amount = driver.find_element(By.CSS_SELECTOR,
                                 "#outlined-error-helper-text")
    amount.send_keys("100")

    # 32. Click 'Submit'
    submit = driver.find_element(By.XPATH,
                                 "//button[. = 'Submit']")
    submit.click()

    # 33. Click 'v1'
    v1 = driver.find_element(By.CSS_SELECTOR,
                             "#v1")
    v1.click()

    # 34. Type '0' in 'v1'
    v1 = driver.find_element(By.CSS_SELECTOR,
                             "#v1")
    v1.send_keys("0")

    # 35. Type '0' in 'v2'
    v2 = driver.find_element(By.CSS_SELECTOR,
                             "#v2")
    v2.send_keys("0")

    # 36. Type '0' in 'v3'
    v3 = driver.find_element(By.CSS_SELECTOR,
                             "#v3")
    v3.send_keys("0")

    # 37. Type '0' in 'v4'
    v4 = driver.find_element(By.CSS_SELECTOR,
                             "#v4")
    v4.send_keys("0")

    # 38. Click 'AUTHORIZE'
    authorize = driver.find_element(By.XPATH,
                                    "//button[. = 'Authorize']")
    authorize.click()

    # 39. Scroll window by ('0','-69')
    driver.execute_script("window.scrollBy(0,-69)")

    # 40. Click 'Dashboard1'
    dashboard1 = driver.find_element(By.CSS_SELECTOR,
                                     "#toDashboard")
    dashboard1.click()

    # 41. Scroll window by ('0','168')
    driver.execute_script("window.scrollBy(0,168)")

    # 42. Scroll window by ('0','87')
    driver.execute_script("window.scrollBy(0,87)")

    # 43. Scroll window by ('0','-99')
    driver.execute_script("window.scrollBy(0,-99)")

    # 44. Scroll window by ('0','-94')
    driver.execute_script("window.scrollBy(0,-94)")

    # 45. Click 'Maintenance Ticket'
    maintenance_ticket = driver.find_element(By.CSS_SELECTOR,
                                             "#tomaintenanceticket")
    maintenance_ticket.click()

    # 46. Scroll window by ('0','148')
    driver.execute_script("window.scrollBy(0,148)")

    # 47. Click '​'
    _ = driver.find_element(By.CSS_SELECTOR,
                            "#mui-component-select-propertyId")
    _.click()

    # 48. Click 'bahria lodges'
    bahria_lodges = driver.find_element(By.XPATH,
                                        "//li[. = 'bahria lodges']")
    bahria_lodges.click()

    # 49. Click '​1'
    _1 = driver.find_element(By.CSS_SELECTOR,
                             "#mui-component-select-unitId")
    _1.click()

    # 50. Click '3'
    _3 = driver.find_element(By.XPATH,
                             "//li[. = '3']")
    _3.click()

    # 51. Click 'message'
    message = driver.find_element(By.CSS_SELECTOR,
                                  "[name='message']")
    message.click()

    # 52. Type 'maintenance ticket from tenantav3 ' in 'message'
    message = driver.find_element(By.CSS_SELECTOR,
                                  "[name='message']")
    message.send_keys("maintenance ticket from tenantav3 ")

    # 53. Click 'Generate Ticket'
    generate_ticket = driver.find_element(By.XPATH,
                                          "//button[. = ' Generate Ticket']")
    generate_ticket.click()

    # 54. Is 'DIV3' present?
    div3 = driver.find_element(By.XPATH,
                               "//body/div/div/div[1]/div/div")

    # 55. Scroll window by ('0','-237')
    driver.execute_script("window.scrollBy(0,-237)")

    # 56. Scroll window by ('0','-8')
    driver.execute_script("window.scrollBy(0,-8)")

    # 57. Scroll window by ('0','-1')
    driver.execute_script("window.scrollBy(0,-1)")

    # 58. Click 'Dashboard1'
    dashboard1 = driver.find_element(By.CSS_SELECTOR,
                                     "#toDashboard")
    dashboard1.click()

    # 59. Scroll window by ('0','207')
    driver.execute_script("window.scrollBy(0,207)")
